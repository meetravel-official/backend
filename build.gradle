import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.meetravel'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation("org.springframework.security:spring-security-messaging")
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation("org.springframework.boot:spring-boot-starter-websocket")
    implementation("org.springframework.boot:spring-boot-starter-amqp")
    implementation("org.springframework.boot:spring-boot-starter-reactor-netty")

    // MySQL
    runtimeOnly 'mysql:mysql-connector-java:8.0.32'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // AWS S3
    implementation 'software.amazon.awssdk:s3:2.27.2' // AWS SDK for S3
    implementation 'software.amazon.awssdk:auth:2.27.2' // AWS SDK for authentication

    implementation("org.flywaydb:flyway-core:10.18.0")
    implementation("org.flywaydb:flyway-mysql:10.18.0")

    implementation("com.github.f4b6a3:uuid-creator:6.0.0")
    implementation("com.amazonaws.secretsmanager:aws-secretsmanager-jdbc:2.0.2")

    if (Os.isFamily(Os.FAMILY_MAC) && Os.isArch("x86_64")) {
        runtimeOnly("io.netty:netty-resolver-dns-native-macos:4.1.113.Final:osx-x86_64")
    } else if (Os.isFamily(Os.FAMILY_MAC) && Os.isArch("aarch64")) {
        runtimeOnly("io.netty:netty-resolver-dns-native-macos:4.1.113.Final:osx-aarch_64")
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
